From a1f56ec6e1af73a1e1bc82d0956201c3fcb6af96 Mon Sep 17 00:00:00 2001
From: Jonas Albrecht <plonkbong100@protonmail.com>
Date: Tue, 21 Jan 2020 19:36:22 +0000
Subject: [PATCH] mtd: nand: samsung: Stop subpage writes on 21nm
 X-Patchwork-Bot: notify
X-Patchwork-Bot: notify

Some Samsung SLC NAND are manufactured using the 21nm process.
They does not supports partial page programming, so disable subpage writes
for it. Manufacturing process is stored in lowest two bits of 5th ID
byte.

This patch is derived and adapted from the upstream patch which
handles a different samsung NAND flash devie (K9F1G08U0E) and is named
mtd: nand: samsung: Disable subpage writes on E-die NAND

Co-Developed-by: Holger Foerster <Hamsi2k@freenet.de>
Signed-off-by: Holger Foerster <Hamsi2k@freenet.de>
Acked-by: Jonas Albrecht <plonkbong100@protonmail.com>
Signed-off-by: Jonas Albrecht <plonkbong100@protonmail.com>
---
 drivers/mtd/nand/raw/nand_samsung.c | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/drivers/mtd/nand/raw/nand_samsung.c b/drivers/mtd/nand/raw/nand_samsung.c
index ef022f6..c73f663 100644
--- a/drivers/mtd/nand/raw/nand_samsung.c
+++ b/drivers/mtd/nand/raw/nand_samsung.c
@@ -20,6 +20,9 @@
 static void samsung_nand_decode_id(struct nand_chip *chip)
 {
 	struct mtd_info *mtd = nand_to_mtd(chip);
+	u8 *d  = chip->id.data;
+	pr_debug("samsung_nand_decode_id: ID is len=%d, %02X %02X %02X %02X %02X %02X %02X %02X\n",
+		chip->id.len, d[0], d[1], d[2], d[3], d[4], d[5], d[6], d[7]);
 
 	/* New Samsung (6 byte ID): Samsung K9GAG08U0F (p.44) */
 	if (chip->id.len == 6 && !nand_is_slc(chip) &&
@@ -95,11 +98,20 @@ static void samsung_nand_decode_id(struct nand_chip *chip)
 		if (nand_is_slc(chip)) {
 			switch (chip->id.data[1]) {
 			/* K9F4G08U0D-S[I|C]B0(T00) */
+			/* before install 4056-MTD-nand_samsung_disable_subpage_writes_on_21nm_NAND.patch
 			case 0xDC:
 				chip->ecc_step_ds = 512;
 				chip->ecc_strength_ds = 1;
 				break;
-
+			*/	
+			case 0xDC:
+				if (chip->id.len > 4 && (chip->id.data[4] & GENMASK(1, 0)) == 0x1) {
+					chip->options |= NAND_NO_SUBPAGE_WRITE;
+					pr_debug("samsung_nand_decode_id: id.data[1] is 0x%02X, disabling subpage writes\n", d[1]);
+				} else {
+					pr_debug("samsung_nand_decode_id: id.data[1] is 0x%02X, allowing subpage writes\n", d[1]);
+				}
+				break;
 			/* K9F1G08U0E 21nm chips do not support subpage write */
 			case 0xF1:
 				if (chip->id.len > 4 &&
-- 
2.7.4

