From 137dd77cbabe77d50aa64e5fcc2ce5704af17357 Mon Sep 17 00:00:00 2001
From: Jonas Albrecht <plonkbong100@protonmail.com>
Date: Sun, 19 Jan 2020 16:45:39 +0000
Subject: [PATCH] net: lantiq_xrx200: It add FID setting
X-Patchwork-Bot: notify

This patch add FID (filtering identifier) setting to lantiq/xrx200-net
(drivers/net/ethernet/lantiq_xrx200.c)

By setting the FID of a VLAN group to a value other then the default (0)
it is possible to switch from Shared VLAN Learning to Independant VLAN
Learning.

Taken from: https://patchwork.ozlabs.org/patch/584699/

The current wifi setup is to use dedicated vlans for wlan traffic.
eth0.66 is attached to the br-lan bridge.
Without the patch the switch behaves same as described at
https://dev.openwrt.org/ticket/8701 .
To get around, implement the fid functionality and assign different fids
to eth0.1 and eth0.66.

This is required for some Routers devices like Arcadyan VGV952CJW33-E-IR

Co-Developed-by: Holger Foerster <Hamsi2k@freenet.de>
Signed-off-by: Holger Foerster <Hamsi2k@freenet.de>
Acked-by: Jonas Albrecht <plonkbong100@protonmail.com>
Signed-off-by: Jonas Albrecht <plonkbong100@protonmail.com>
---
 drivers/net/ethernet/lantiq_xrx200.c | 61 ++++++++++++++++++++++++++++++++++++
 1 file changed, 61 insertions(+)

diff --git a/drivers/net/ethernet/lantiq_xrx200.c b/drivers/net/ethernet/lantiq_xrx200.c
index 90306b7..858863a 100644
--- a/drivers/net/ethernet/lantiq_xrx200.c
+++ b/drivers/net/ethernet/lantiq_xrx200.c
@@ -570,6 +570,35 @@ static int xrx200sw_get_vlan_vid(struct switch_dev *dev, const struct switch_att
 	return 0;
 }
 
+static int xrx200sw_set_vlan_fid(struct switch_dev *dev, const struct switch_attr *attr,
+				 struct switch_val *val)
+{
+	int i;
+	struct xrx200_pce_table_entry tev;
+
+	tev.table = XRX200_PCE_ACTVLAN_IDX;
+
+	tev.index = val->port_vlan;
+	xrx200_pce_table_entry_read(&tev);
+	tev.val[0] = val->value.i;
+	xrx200_pce_table_entry_write(&tev);
+
+	return 0;
+}
+
+static int xrx200sw_get_vlan_fid(struct switch_dev *dev, const struct switch_attr *attr,
+				 struct switch_val *val)
+{
+	struct xrx200_pce_table_entry te;
+
+	te.table = XRX200_PCE_ACTVLAN_IDX;
+	te.index = val->port_vlan;
+	xrx200_pce_table_entry_read(&te);
+	val->value.i = te.val[0];
+
+	return 0;
+}
+
 static int xrx200sw_set_vlan_ports(struct switch_dev *dev, struct switch_val *val)
 {
 	struct xrx200_hw *hw = container_of(dev, struct xrx200_hw, swdev);
@@ -710,6 +739,30 @@ static int xrx200sw_get_port_pvid(struct switch_dev *dev, int port, int *val)
 	return 0;
 }
 
+static int xrx200sw_set_port_pvid(struct switch_dev *dev, int port, int val)
+{
+	int i;
+	struct xrx200_pce_table_entry tev;
+
+	if (port >= XRX200_MAX_PORT)
+		return -EINVAL;
+
+	tev.table = XRX200_PCE_ACTVLAN_IDX;
+
+	for (i = 0; i < XRX200_MAX_VLAN; i++)
+	{
+		tev.index = i;
+		xrx200_pce_table_entry_read(&tev);
+		if (tev.key[0] == val)
+		{
+			xrx200sw_write_x(i, XRX200_PCE_DEFPVID_PVID, port);
+			return 0;
+		}
+	}
+
+	return -EINVAL;
+}
+
 static int xrx200sw_get_port_link(struct switch_dev *dev,
 				  int port,
 				  struct switch_port_link *link)
@@ -834,6 +887,14 @@ static struct switch_attr xrx200sw_vlan[] = {
 	},
 	{
 		.type = SWITCH_TYPE_INT,
+		.name = "fid",
+		.description = "Filtering Identifier (0-63)",
+		.set = xrx200sw_set_vlan_fid,
+		.get = xrx200sw_get_vlan_fid,
+		.max = 63,
+	},
+	{
+		.type = SWITCH_TYPE_INT,
 		.name = "enable",
 		.description = "Enable VLAN",
 		.set = xrx200sw_set_vlan_enable,
-- 
2.7.4

